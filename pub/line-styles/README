
A separate document that describes the algorithms employed to handle
line ending styles and line join styles for variable-width lines
(applies to all 'vwline' functions for end styles, 
 plus vwline() for join styles).

- round ends and round joins NOT necessarily arcs of circles
  => bezier approximations

- mitre joins NOT necessarily a single intersection point

- ADD mitre end style (with mitre limit as for mitre joins)

- inside corners NOT necessarily a single intersection point
  => follow simple algorithm along line edges then polysimplify()

  <p>
    The deciding factor in deciding how to handle inner joins was
    "symmetry" (does the line look the same if the x/y locations,
    and widths, are reversed?).
  </p>




+ Created docker image with (NOTE ONLY lowercase in image tag) ...

  sudo docker build -t pmur002/line-styles .

  - NOTE that I had to edit /etc/default/docker to enable ...

    DOCKER_OPTS="--dns 130.216.190.1"

    ... and restart the docker server ...

    sudo service docker restart

    ... so that the docker build would use the UoA DNS server
    (otherwise the build fails at the first apt-update)

+ To test image interactively 
  (which is useful for testing that various things will run and installing
   packages interactively before adding them to the Dockerfile) ...

   E.G., test that the report will build !!!

  sudo docker run -v /home/pmur002/Files/Research/Rstuff/VWline/vwline/pub/line-styles:/home/work/ -w /home/work --rm -t -i pmur002/line-styles /bin/bash

+ To make image available on DockerHub ...

  sudo docker login
  sudo docker push pmur002/line-styles

+ Build report with ...

  make docker
